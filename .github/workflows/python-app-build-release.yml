name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write # Allows GitHub Actions to create and upload releases

jobs:
  pyinstaller-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest] # Define the platforms you want to support

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Adjust the path if necessary

      - name: Build Executable
        id: build_exec
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: "3.10"
          spec: "main.spec"
          requirements: "requirements.txt"
          upload_exe_with_name: ${{ matrix.os }}-tictactoe
          options: --onefile --windowed --icon=assets/icon.ico

      # - name: Create Tag
      #   id: create_tag
      #   run: |
      #     $shortSha = $env:GITHUB_SHA.Substring(0, 7)
      #     $TAG_NAME = "v1.0.0-$shortSha"
      #     echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
      #     echo "TAG_NAME=$TAG_NAME" >>  "$GITHUB_OUTPUT"
      #     echo "TAG_NAME=$TAG_NAME"
          
      # - name: Debug TAG_NAME
      #   run: |
      #     echo "TAG_NAME from environment: ${{ steps.create_tag.outputs.TAG_NAME }} and $TAG_NAME"
      #   env:
      #     TAG_NAME: ${{ steps.create_tag.outputs.TAG_NAME }}
          
      - name: Set short git commit SHA
        id: vars
        run: |
          $calculatedSha = git rev-parse --short ${{ github.sha }}
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
          echo "COMMIT_SHORT_SHA=$COMMIT_SHORT_SHA"
          echo "COMMIT_SHORT_SHA=${{ env.COMMIT_SHORT_SHA }}"

      - name: Confirm git commit SHA output
        run: echo "${{ env.COMMIT_SHORT_SHA }}"
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          # tag_name: ${{ env.TAG_NAME }}
          tag_name: v1.0.0-${{ env.COMMIT_SHORT_SHA }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Log
        run: |
          echo upload_url: ${{ steps.create_release.outputs.upload_url }}
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.build_exec.outputs.executable_path}}
          # asset_path: dist/${{ matrix.os }}-tictactoe${{ (matrix.os == 'windows-latest') && '.exe' || '' }}
          asset_name: tictactoe${{ (matrix.os == 'windows-latest') && '.exe' || '' }}
          asset_content_type: ${{ (matrix.os == 'windows-latest') && 'application/x-msdownload' || 'application/x-executable' }}
